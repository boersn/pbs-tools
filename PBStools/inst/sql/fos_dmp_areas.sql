--DMP Records for GFFOS
SET NOCOUNT ON 

-- Find the most frequent MAJOR area per trip
SELECT
  OC.TRIP_ID,
  OC.MAJOR_STAT_AREA_CODE, 
  COUNT(OC.MAJOR_STAT_AREA_CODE) AS MOST_FREQUENT
INTO #MOST_FREQ_MAJOR
FROM  GF_D_OFFICIAL_FE_CATCH OC
--WHERE OC.TRIP_ID BETWEEN 60278 AND 60735  --for testing
WHERE OC.TRIP_ID IN (60295,74206,74212,74804,80726,80852) --for testing
GROUP BY 
  OC.TRIP_ID,
  OC.MAJOR_STAT_AREA_CODE
ORDER BY 
  OC.TRIP_ID,
  COUNT(OC.MAJOR_STAT_AREA_CODE) DESC

SELECT A.*
INTO #TRIP_MAJOR
FROM #MOST_FREQ_MAJOR A
INNER JOIN (
  SELECT C.TRIP_ID, MAX(C.MOST_FREQUENT) AS MOST_FREQUENT
  FROM #MOST_FREQ_MAJOR C
  GROUP BY C.TRIP_ID
  ) B ON 
    A.TRIP_ID=B.TRIP_ID AND 
    A.MOST_FREQUENT=B.MOST_FREQUENT
ORDER BY
  A.TRIP_ID

-- Find the most frequent MINOR area within the most frequent MAJOR area per trip
SELECT
  OC.TRIP_ID,
  OC.MAJOR_STAT_AREA_CODE,
  OC.MINOR_STAT_AREA_CODE,
  COUNT(OC.MINOR_STAT_AREA_CODE) AS MOST_FREQUENT
INTO #MOST_FREQ_MINOR
FROM
  GF_D_OFFICIAL_FE_CATCH OC INNER JOIN
  #TRIP_MAJOR TA ON
    OC.TRIP_ID = TA.TRIP_ID AND
    OC.MAJOR_STAT_AREA_CODE = TA.MAJOR_STAT_AREA_CODE
GROUP BY 
  OC.TRIP_ID,
  OC.MAJOR_STAT_AREA_CODE,
  OC.MINOR_STAT_AREA_CODE
ORDER BY 
  OC.TRIP_ID,
  COUNT(OC.MINOR_STAT_AREA_CODE) DESC

SELECT A.*
INTO #TRIP_MAJOR_MINOR
FROM #MOST_FREQ_MINOR A
INNER JOIN (
  SELECT C.TRIP_ID, MAX(C.MOST_FREQUENT) AS MOST_FREQUENT
  FROM #MOST_FREQ_MINOR C
  GROUP BY C.TRIP_ID
  ) B ON 
    A.TRIP_ID=B.TRIP_ID AND 
    A.MOST_FREQUENT=B.MOST_FREQUENT
ORDER BY
  A.TRIP_ID

-- Find the most frequent LOCAL area within the most frequent MINOR area within the most frequent MAJOR area per trip
SELECT
  OC.TRIP_ID,
  OC.MAJOR_STAT_AREA_CODE,
  OC.MINOR_STAT_AREA_CODE,
  OC.LOCALITY_CODE,
  COUNT(OC.LOCALITY_CODE) AS MOST_FREQUENT
INTO #MOST_FREQ_LOCAL
FROM
  GF_D_OFFICIAL_FE_CATCH OC INNER JOIN
  #TRIP_MAJOR_MINOR TB ON
    OC.TRIP_ID = TB.TRIP_ID AND
    OC.MAJOR_STAT_AREA_CODE = TB.MAJOR_STAT_AREA_CODE AND
    OC.MINOR_STAT_AREA_CODE = TB.MINOR_STAT_AREA_CODE
GROUP BY 
  OC.TRIP_ID,
  OC.MAJOR_STAT_AREA_CODE,
  OC.MINOR_STAT_AREA_CODE,
  OC.LOCALITY_CODE
ORDER BY 
  OC.TRIP_ID,
  COUNT(OC.LOCALITY_CODE) DESC


SELECT A.*
INTO #TRIP_MAJOR_MINOR_LOCAL
FROM #MOST_FREQ_LOCAL A
INNER JOIN (
  SELECT C.TRIP_ID, MAX(C.MOST_FREQUENT) AS MOST_FREQUENT
  FROM #MOST_FREQ_LOCAL C
  GROUP BY C.TRIP_ID
  ) B ON 
    A.TRIP_ID=B.TRIP_ID AND 
    A.MOST_FREQUENT=B.MOST_FREQUENT
ORDER BY
  A.TRIP_ID

-- Find the average depth within the most frequent LOCAL area within the most frequent MINOR area within the most frequent MAJOR area per trip
SELECT
  OC.TRIP_ID,
  OC.MAJOR_STAT_AREA_CODE,
  OC.MINOR_STAT_AREA_CODE,
  OC.LOCALITY_CODE,
  SUM(COALESCE(OC.BEST_DEPTH_FM,0))*1.8288 AS SUMDEP,
  SUM(CASE WHEN OC.BEST_DEPTH_FM IS NULL THEN 0 ELSE 1 END) AS NUMDEP
  --AVG(OC.BEST_DEPTH_FM)*1.8288 AS BEST_DEPTH -- Causes a problems when depths are NULL and results sent to a temporary table
INTO #PRE_TRIP
FROM
  GF_D_OFFICIAL_FE_CATCH OC INNER JOIN
  #TRIP_MAJOR_MINOR_LOCAL TC ON
    OC.TRIP_ID = TC.TRIP_ID AND
    OC.MAJOR_STAT_AREA_CODE = TC.MAJOR_STAT_AREA_CODE AND
    OC.MINOR_STAT_AREA_CODE = TC.MINOR_STAT_AREA_CODE AND
    OC.LOCALITY_CODE = TC.LOCALITY_CODE
GROUP BY 
  OC.TRIP_ID,
  OC.MAJOR_STAT_AREA_CODE,
  OC.MINOR_STAT_AREA_CODE,
  OC.LOCALITY_CODE
ORDER BY 
  OC.TRIP_ID

SELECT
  PT.TRIP_ID,
  PT.MAJOR_STAT_AREA_CODE AS major,
  PT.MINOR_STAT_AREA_CODE AS minor,
  PT.LOCALITY_CODE AS locality,
  PT.SUMDEP / (CASE WHEN PT.NUMDEP<=0 THEN 1 ELSE PT.NUMDEP END) As fdep
INTO #BEST_TRIP
FROM #PRE_TRIP PT

select * from #BEST_TRIP

--qu("fos_dmp_areas.sql", dbName="GFFOS", strSpp="435")




