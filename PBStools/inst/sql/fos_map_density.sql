-- Query species catch from GFFOS on GFSH
SELECT
  CC.FID AS \"fid\",
  CC.X, CC.Y, CC.X2, CC.Y2,
  CC.depth AS \"fdep\",
  CC.Edate AS \"date\",
  CC.VRN AS \"cfv\",
  CC.effort AS \"eff\",
  CC.landed + CC.released + CC.liced + CC.bait AS \"catch\"
FROM 
  (SELECT
  OC.TRIP_ID,
  OC.FISHING_EVENT_ID,
  (CASE
    WHEN OC.FISHERY_SECTOR IN ('GROUNDFISH TRAWL') THEN 1
    WHEN OC.FISHERY_SECTOR IN ('HALIBUT','HALIBUT AND SABLEFISH') THEN 2
    WHEN OC.FISHERY_SECTOR IN ('SABLEFISH') THEN 3
    WHEN OC.FISHERY_SECTOR IN ('LINGCOD','SPINY DOGFISH') THEN 4
    WHEN OC.FISHERY_SECTOR IN ('ROCKFISH INSIDE','ROCKFISH OUTSIDE') THEN 5
    ELSE 0 END) AS FID,
  TO_DATE(TO_CHAR(OC.BEST_DATE,'YYYY-MM-DD'),'YYYY-MM-DD') AS Edate,
  NVL(OC.VESSEL_REGISTRATION_NUMBER,0) AS VRN,
  Avg(NVL(-OC.START_LONGITUDE,NULL)) AS X, 
  Avg(NVL(OC.START_LATITUDE,NULL)) AS Y,
  Avg(NVL(-OC.END_LONGITUDE,NULL)) AS X2, 
  Avg(NVL(OC.END_LATITUDE,NULL)) AS Y2,
  Avg(NVL(OC.BEST_DEPTH_FM,NULL) * 6. * 0.3048) AS depth,  -- convert fathoms to metres
  Sum(CASE
    WHEN OC.SPECIES_CODE IN (@sppcode) THEN
      NVL(OC.LANDED_ROUND_KG,0)
    ELSE 0 END) AS landed,
  Sum(CASE
    WHEN OC.SPECIES_CODE IN (@sppcode) THEN
      COALESCE(OC.TOTAL_RELEASED_ROUND_KG,
      (NVL(OC.SUBLEGAL_RELEASED_COUNT,0) + NVL(OC.LEGAL_RELEASED_COUNT,0)) * FW.mnwt, 0)
    ELSE 0 END) AS released,
  Sum(CASE
    WHEN OC.SPECIES_CODE IN (@sppcode) THEN
	    (NVL(OC.SUBLEGAL_LICED_COUNT,0) + NVL(OC.LEGAL_LICED_COUNT,0)) * FW.mnwt
	  ELSE 0 END) AS liced,
  Sum(CASE
    WHEN OC.SPECIES_CODE IN (@sppcode) THEN
      (NVL(OC.SUBLEGAL_BAIT_COUNT,0) + NVL(OC.LEGAL_BAIT_COUNT,0)) * FW.mnwt
    ELSE 0 END) AS bait,
  Avg(
    CASE WHEN OC.START_DATE IS NOT NULL AND OC.END_DATE IS NOT NULL THEN
    TO_NUMBER(OC.END_DATE - OC.START_DATE) * 24. * 60. ELSE 0 END) AS effort,   --effort in minutes
  Sum(
    NVL(OC.LANDED_ROUND_KG,0) +
    COALESCE(OC.TOTAL_RELEASED_ROUND_KG,
      (NVL(OC.SUBLEGAL_RELEASED_COUNT,0) + NVL(OC.LEGAL_RELEASED_COUNT,0)) * FW.mnwt, 0) +
    (NVL(OC.SUBLEGAL_LICED_COUNT,0) + NVL(OC.LEGAL_LICED_COUNT,0)) * FW.mnwt +
    (NVL(OC.SUBLEGAL_BAIT_COUNT,0) + NVL(OC.LEGAL_BAIT_COUNT,0)) * FW.mnwt
    ) AS totcat
  FROM GFFOS.GF_D_OFFICIAL_FE_CATCH OC INNER JOIN
-- FISH WEIGHTS FW
  GFFOS.MEAN_SPECIES_WEIGHT_VW FW ON
    OC.SPECIES_CODE = FW.spp
  GROUP 
    BY OC.TRIP_ID, OC.FISHING_EVENT_ID,
  (CASE
    WHEN OC.FISHERY_SECTOR IN ('GROUNDFISH TRAWL') THEN 1
    WHEN OC.FISHERY_SECTOR IN ('HALIBUT','HALIBUT AND SABLEFISH') THEN 2
    WHEN OC.FISHERY_SECTOR IN ('SABLEFISH') THEN 3
    WHEN OC.FISHERY_SECTOR IN ('LINGCOD','SPINY DOGFISH') THEN 4
    WHEN OC.FISHERY_SECTOR IN ('ROCKFISH INSIDE','ROCKFISH OUTSIDE') THEN 5
    ELSE 0 END),
  TO_DATE(TO_CHAR(OC.BEST_DATE,'YYYY-MM-DD'),'YYYY-MM-DD'),
  NVL(OC.VESSEL_REGISTRATION_NUMBER,0) ) CC
WHERE
  NVL(CC.effort,0) > 0 AND
  NVL(CC.X,0) + NVL(CC.X2,0) < 0 AND
  NVL(CC.Y,0) + NVL(CC.Y2,0) > 0
;
-- getData("fos_map_density.sql","GFFOS",strSpp="394",server="GFSH",type="ORA",trusted=F)

